name: Force Cleanup and Redeploy

on:
  workflow_dispatch:
    inputs:
      confirmation:
        description: 'Type "CLEANUP" to confirm force cleanup'
        required: true
        type: string

permissions:
  id-token: write
  contents: read

env:
  AWS_REGION: eu-central-1

jobs:
  force-cleanup:
    name: Force Cleanup All Resources
    runs-on: ubuntu-latest
    if: github.event.inputs.confirmation == 'CLEANUP'
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::920120424621:role/githubrepo
          aws-region: ${{ env.AWS_REGION }}
      
      - name: Run Complete Force Cleanup
        run: |
          chmod +x ./force-cleanup-all.sh
          ./force-cleanup-all.sh
      
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.6.0
      
      - name: Terraform Init
        working-directory: ./terraform
        run: terraform init
      
      - name: Terraform Destroy
        working-directory: ./terraform
        continue-on-error: true
        run: terraform destroy -auto-approve
      
      - name: Cleanup Summary
        run: |
          echo "## ðŸ§¹ Force Cleanup Complete" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "- Lambda event source mappings deleted" >> $GITHUB_STEP_SUMMARY
          echo "- EKS cluster deleted" >> $GITHUB_STEP_SUMMARY
          echo "- Load balancers deleted" >> $GITHUB_STEP_SUMMARY
          echo "- Terraform destroy executed" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "âœ… Ready for fresh deployment!" >> $GITHUB_STEP_SUMMARY
